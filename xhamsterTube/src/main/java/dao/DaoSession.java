package dao;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig xhamsterVideoDaoConfig;
    private final DaoConfig xhamsterPictureDaoConfig;
    private final DaoConfig xhamsterGalleryDaoConfig;
    private final DaoConfig xhamsterUserDaoConfig;
    private final DaoConfig xhamsterCommentDaoConfig;

    private final XhamsterVideoDao xhamsterVideoDao;
    private final XhamsterPictureDao xhamsterPictureDao;
    private final XhamsterGalleryDao xhamsterGalleryDao;
    private final XhamsterUserDao xhamsterUserDao;
    private final XhamsterCommentDao xhamsterCommentDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        xhamsterVideoDaoConfig = daoConfigMap.get(XhamsterVideoDao.class).clone();
        xhamsterVideoDaoConfig.initIdentityScope(type);

        xhamsterPictureDaoConfig = daoConfigMap.get(XhamsterPictureDao.class).clone();
        xhamsterPictureDaoConfig.initIdentityScope(type);

        xhamsterGalleryDaoConfig = daoConfigMap.get(XhamsterGalleryDao.class).clone();
        xhamsterGalleryDaoConfig.initIdentityScope(type);

        xhamsterUserDaoConfig = daoConfigMap.get(XhamsterUserDao.class).clone();
        xhamsterUserDaoConfig.initIdentityScope(type);

        xhamsterCommentDaoConfig = daoConfigMap.get(XhamsterCommentDao.class).clone();
        xhamsterCommentDaoConfig.initIdentityScope(type);

        xhamsterVideoDao = new XhamsterVideoDao(xhamsterVideoDaoConfig, this);
        xhamsterPictureDao = new XhamsterPictureDao(xhamsterPictureDaoConfig, this);
        xhamsterGalleryDao = new XhamsterGalleryDao(xhamsterGalleryDaoConfig, this);
        xhamsterUserDao = new XhamsterUserDao(xhamsterUserDaoConfig, this);
        xhamsterCommentDao = new XhamsterCommentDao(xhamsterCommentDaoConfig, this);

        registerDao(XhamsterVideo.class, xhamsterVideoDao);
        registerDao(XhamsterPicture.class, xhamsterPictureDao);
        registerDao(XhamsterGallery.class, xhamsterGalleryDao);
        registerDao(XhamsterUser.class, xhamsterUserDao);
        registerDao(XhamsterComment.class, xhamsterCommentDao);
    }
    
    public void clear() {
        xhamsterVideoDaoConfig.getIdentityScope().clear();
        xhamsterPictureDaoConfig.getIdentityScope().clear();
        xhamsterGalleryDaoConfig.getIdentityScope().clear();
        xhamsterUserDaoConfig.getIdentityScope().clear();
        xhamsterCommentDaoConfig.getIdentityScope().clear();
    }

    public XhamsterVideoDao getXhamsterVideoDao() {
        return xhamsterVideoDao;
    }

    public XhamsterPictureDao getXhamsterPictureDao() {
        return xhamsterPictureDao;
    }

    public XhamsterGalleryDao getXhamsterGalleryDao() {
        return xhamsterGalleryDao;
    }

    public XhamsterUserDao getXhamsterUserDao() {
        return xhamsterUserDao;
    }

    public XhamsterCommentDao getXhamsterCommentDao() {
        return xhamsterCommentDao;
    }

}
